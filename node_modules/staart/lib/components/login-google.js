"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ooth_client_react_1 = require("ooth-client-react");
var recompose_1 = require("recompose");
var i18n_1 = require("../hocs/i18n");
var GoogleComponent = /** @class */ (function (_super) {
    __extends(GoogleComponent, _super);
    function GoogleComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {};
        return _this;
    }
    GoogleComponent.prototype.componentDidMount = function () {
        var _this = this;
        if (typeof window.gapi === 'undefined') {
            var $script = require('scriptjs');
            $script('//apis.google.com/js/client:platform.js', function () {
                var gapi = window.gapi;
                gapi.load('auth2', function () {
                    if (!gapi.auth2.getAuthInstance()) {
                        gapi.auth2
                            .init({
                            client_id: _this.props.clientId,
                        })
                            .then(function (_res) {
                            _this.setState({
                                show: true,
                            });
                        }, function (err) {
                            console.log('error', err);
                        });
                    }
                    else {
                        _this.setState({
                            show: true,
                        });
                    }
                });
            });
        }
        else {
            this.setState({
                show: true,
            });
        }
    };
    GoogleComponent.prototype.render = function () {
        var _this = this;
        if (!this.state.show) {
            return null;
        }
        return (React.createElement("div", { className: "form-group" },
            React.createElement("button", { onClick: function () {
                    var auth2 = window.gapi.auth2.getAuthInstance();
                    auth2
                        .signIn( /*{
                                  response_type,
                                  redirect_uri,
                                  fetch_basic_profile,
                                  prompt,
                                  scope
                              }*/)
                        .then(function (res) {
                        return _this.props.oothClient
                            .authenticate('google', 'login', {
                            id_token: res.getAuthResponse().id_token,
                            remember: _this.props.remember,
                        })
                            .catch(function (e) {
                            _this.setState({
                                state: 'error',
                                message: e.message,
                            });
                        });
                    }, function (e) {
                        _this.setState({
                            state: 'error',
                            message: e.message,
                        });
                    });
                }, type: "button", className: "btn btn-block btn-default", style: {
                    backgroundColor: '#d34836',
                    border: '#d34836',
                    color: 'white',
                } }, this.props.label ? this.props.label : this.props.__('login-google.login-with-google')),
            this.state.state === 'error' && (React.createElement("div", { className: "alert alert-danger", role: "alert" }, this.state.message))));
    };
    return GoogleComponent;
}(React.Component));
var Google = recompose_1.compose(ooth_client_react_1.withOoth, i18n_1.default)(GoogleComponent);
exports.default = Google;
