"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ooth_client_react_1 = require("ooth-client-react");
var recompose_1 = require("recompose");
var form_1 = require("./form");
var i18n_1 = require("../hocs/i18n");
var LocalComponent = /** @class */ (function (_super) {
    __extends(LocalComponent, _super);
    function LocalComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LocalComponent.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement(exports.Username, null),
            React.createElement(Email, null),
            React.createElement(Password, null)));
    };
    return LocalComponent;
}(React.Component));
var Local = recompose_1.compose(ooth_client_react_1.withUser)(LocalComponent);
exports.default = Local;
var EmailComponent = /** @class */ (function (_super) {
    __extends(EmailComponent, _super);
    function EmailComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            sent: false,
        };
        return _this;
    }
    EmailComponent.prototype.render = function () {
        var _this = this;
        var _a = this.props, __ = _a.__, user = _a.user;
        var _b = user.local || { email: undefined, verified: undefined }, email = _b.email, verified = _b.verified;
        return (React.createElement("div", null,
            React.createElement("h2", null, "Email"),
            React.createElement(form_1.default, { onSubmit: function () {
                    var email = _this.email.value;
                    _this.props.oothClient
                        .method('local', 'set-email', {
                        email: email,
                    })
                        .then(function (_a) {
                        var message = _a.message;
                        _this.setState({
                            message: message,
                            state: 'success',
                        });
                    })
                        .catch(function (_a) {
                        var message = _a.message;
                        _this.setState({
                            message: message,
                            state: 'error',
                        });
                    });
                }, state: this.state.state, message: this.state.message, submitLabel: email ? __('account-local.email.change-email') : __('account-local.email.set-email') },
                this.state.state === 'success' && (React.createElement("div", { className: "alert alert-success", role: "alert" }, this.state.message)),
                this.state.state === 'error' && (React.createElement("div", { className: "alert alert-danger", role: "alert" }, this.state.message)),
                React.createElement("div", { className: "form-group" },
                    React.createElement("label", { htmlFor: "email" }, __('account-local.email.email')),
                    React.createElement("input", { type: "email", className: "form-control", id: "email", placeholder: "mail@example.com", defaultValue: email, ref: function (email) {
                            _this.email = email;
                        } }))),
            email && (React.createElement("div", null,
                React.createElement("h3", null, __('account-local.email.email-verification')),
                React.createElement("p", null,
                    verified ? __('account-local.email.verified') : __('account-local.email.not-verified'),
                    "."),
                this.state.sent ? (React.createElement("p", null, __('account-local.email.verification-email-sent'))) : (!verified && (React.createElement("button", { onClick: function () {
                        _this.props.oothClient.method('local', 'generate-verification-token').then(function () {
                            _this.setState({
                                sent: true,
                            });
                        });
                    }, className: "btn btn-default" }, __('account-local.email.send-verification-email'))))))));
    };
    return EmailComponent;
}(React.Component));
var Email = recompose_1.compose(ooth_client_react_1.withUser, ooth_client_react_1.withOoth, i18n_1.default)(EmailComponent);
var UsernameFormComponent = /** @class */ (function (_super) {
    __extends(UsernameFormComponent, _super);
    function UsernameFormComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {};
        return _this;
    }
    UsernameFormComponent.prototype.render = function () {
        var _this = this;
        var _a = this.props, __ = _a.__, user = _a.user, onSet = _a.onSet;
        var username = user.local && user.local.username;
        return (React.createElement("div", null,
            React.createElement(form_1.default, { onSubmit: function () {
                    var username = _this.username.value;
                    if (!username) {
                        return;
                    }
                    _this.props.oothClient
                        .method('local', 'set-username', {
                        username: username,
                    })
                        .then(function (_a) {
                        var message = _a.message;
                        _this.setState({
                            message: message,
                            state: 'success',
                        });
                        if (onSet) {
                            onSet();
                        }
                    })
                        .catch(function (_a) {
                        var message = _a.message;
                        _this.setState({
                            message: message,
                            state: 'error',
                        });
                    });
                }, state: this.state.state, message: this.state.message, submitLabel: __('account-local.username.set-username') || __('account-local.username.username') },
                React.createElement("div", { className: "form-group" },
                    React.createElement("label", { htmlFor: "username" }, __('account-local.username.username')),
                    React.createElement("input", { type: "username", className: "form-control", id: "username", placeholder: "hansolo", defaultValue: username, ref: function (username) {
                            _this.username = username;
                        } })))));
    };
    return UsernameFormComponent;
}(React.Component));
exports.Username = recompose_1.compose(ooth_client_react_1.withOoth, ooth_client_react_1.withUser, i18n_1.default)(UsernameFormComponent);
var PasswordComponent = /** @class */ (function (_super) {
    __extends(PasswordComponent, _super);
    function PasswordComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {};
        return _this;
    }
    PasswordComponent.prototype.render = function () {
        var _this = this;
        var _a = this.props, __ = _a.__, oothClient = _a.oothClient;
        return (React.createElement("div", null,
            React.createElement("h2", null, "Password"),
            React.createElement(form_1.default, { onSubmit: function () {
                    var password = _this.password.value;
                    var newPassword = _this.newPassword.value;
                    var newPassword2 = _this.newPassword2.value;
                    if (newPassword !== newPassword2) {
                        return _this.setState({
                            state: 'error',
                            message: __('account-local.password.passwords-dont-match'),
                        });
                    }
                    oothClient
                        .method('local', 'change-password', {
                        password: password,
                        newPassword: newPassword,
                    })
                        .then(function (res) {
                        _this.password.value = '';
                        _this.newPassword.value = '';
                        _this.newPassword2.value = '';
                        _this.setState({
                            state: 'success',
                            message: res.message,
                        });
                    })
                        .catch(function (e) {
                        _this.setState({
                            state: 'error',
                            message: e.message,
                        });
                    });
                }, state: this.state.state, message: this.state.message, submitLabel: __('account-local.password.change-password') },
                React.createElement("div", { className: "form-group" },
                    React.createElement("label", { htmlFor: "password" }, __('account-local.password.old-password-if-any')),
                    React.createElement("input", { type: "password", className: "form-control", id: "password", placeholder: "******", ref: function (password) {
                            _this.password = password;
                        } })),
                React.createElement("div", { className: "form-group" },
                    React.createElement("label", { htmlFor: "newPassword" }, __('account-local.password.new-password')),
                    React.createElement("input", { type: "password", className: "form-control", id: "newPassword", placeholder: "******", ref: function (newPassword) {
                            _this.newPassword = newPassword;
                        } })),
                React.createElement("div", { className: "form-group" },
                    React.createElement("label", { htmlFor: "newPassword2" }, __('account-local.password.repeat-new-password')),
                    React.createElement("input", { type: "password", className: "form-control", id: "newPassword2", placeholder: "******", ref: function (newPassword2) {
                            _this.newPassword2 = newPassword2;
                        } })))));
    };
    return PasswordComponent;
}(React.Component));
var Password = recompose_1.compose(ooth_client_react_1.withOoth, i18n_1.default)(PasswordComponent);
