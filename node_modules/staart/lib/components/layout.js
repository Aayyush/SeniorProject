"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ooth_client_react_1 = require("ooth-client-react");
var recompose_1 = require("recompose");
var React = require("react");
var head_1 = require("../hocs/head");
var link_1 = require("../hocs/link");
var i18n_1 = require("../hocs/i18n");
var getUsername = function (user) {
    return user.local
        ? user.local.username || user.local.email
        : user.facebook
            ? user.facebook.email
            : user.google && user.google.email;
};
var StatelessLayout = function (_a) {
    var __ = _a.__, title = _a.title, children = _a.children, page = _a.page, user = _a.user, toggled = _a.toggled, setToggled = _a.setToggled, siteName = _a.siteName, menu = _a.menu, loggedMenu = _a.loggedMenu, userMenu = _a.userMenu, footerMessage = _a.footerMessage, Head = _a.Head, Link = _a.Link;
    return (React.createElement("div", null,
        React.createElement(Head, null,
            React.createElement("title", null, title),
            React.createElement("link", { rel: "stylesheet", href: "//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" }),
            React.createElement("meta", { name: "viewport", content: "initial-scale=1.0, width=device-width" })),
        React.createElement("div", { style: {
                paddingTop: '50px',
                paddingBottom: '20px',
            } },
            React.createElement("nav", { className: "navbar navbar-inverse navbar-fixed-top" },
                React.createElement("div", { className: "container" },
                    React.createElement("div", { className: "navbar-header" },
                        React.createElement("button", { type: "button", className: "navbar-toggle collapsed", "data-toggle": "collapse", "data-target": "#navbar", "aria-expanded": "false", "aria-controls": "navbar", onClick: function () {
                                setToggled(!toggled);
                            } },
                            React.createElement("span", { className: "sr-only" }, __('layout.toggle-navigation')),
                            React.createElement("span", { className: "icon-bar" }),
                            React.createElement("span", { className: "icon-bar" }),
                            React.createElement("span", { className: "icon-bar" })),
                        React.createElement("a", { className: "navbar-brand", href: "/" }, siteName)),
                    React.createElement("div", { id: "navbar", className: 'collapse navbar-collapse' + (toggled ? ' in' : '') }, user ? (React.createElement("ul", { className: "nav navbar-nav navbar-right" },
                        (typeof loggedMenu === 'function' ? loggedMenu(user) : loggedMenu || menu).map(function (_a) {
                            var url = _a.url, name = _a.name, label = _a.label;
                            return (React.createElement("li", { key: name, className: page === name ? 'active' : undefined },
                                React.createElement(Link, { href: url },
                                    React.createElement("a", null, label))));
                        }),
                        React.createElement(Dropdown, { page: page, userMenu: typeof userMenu === 'function' ? userMenu(user) : userMenu },
                            "Hello, ",
                            getUsername(user)))) : (React.createElement("ul", { className: "nav navbar-nav navbar-right" },
                        menu.map(function (_a) {
                            var url = _a.url, name = _a.name, label = _a.label;
                            return (React.createElement("li", { key: name, className: page === name ? 'active' : undefined },
                                React.createElement(Link, { href: url },
                                    React.createElement("a", null, label))));
                        }),
                        React.createElement("li", { className: page === 'login' ? 'active' : undefined },
                            React.createElement(Link, { href: "/login" },
                                React.createElement("a", null, "Log in"))),
                        React.createElement("li", { className: page === 'register' ? 'active' : undefined },
                            React.createElement(Link, { href: "/register" },
                                React.createElement("a", null, "Register"))))))))),
        children,
        React.createElement("footer", null,
            React.createElement("div", { className: "container" },
                React.createElement("hr", null),
                footerMessage))));
};
exports.default = recompose_1.compose(head_1.default, link_1.default, ooth_client_react_1.withUser, i18n_1.default, recompose_1.withState('toggled', 'setToggled', false))(StatelessLayout);
var StatelessDropdown = function (_a) {
    var page = _a.page, children = _a.children, toggled = _a.toggled, setToggled = _a.setToggled, userMenu = _a.userMenu, Link = _a.Link;
    return (React.createElement("li", { className: 'dropdown' + (toggled ? ' open' : undefined) },
        React.createElement("a", { href: "#", className: "dropdown-toggle", "data-toggle": "dropdown", role: "button", "aria-haspopup": "true", "aria-expanded": "true", onClick: function () {
                setToggled(!toggled);
            } },
            children,
            " ",
            React.createElement("span", { className: "caret" })),
        toggled && (React.createElement("ul", { className: "dropdown-menu" }, userMenu.map(function (_a) {
            var url = _a.url, name = _a.name, label = _a.label;
            return (React.createElement("li", { key: name, className: page === 'name' ? 'active' : undefined },
                React.createElement(Link, { href: url },
                    React.createElement("a", null, label))));
        })))));
};
var Dropdown = recompose_1.compose(link_1.default, recompose_1.withState('toggled', 'setToggled', false))(StatelessDropdown);
